language: cpp

cache:
  ccache: true
  directories:
    - $HOME/.conan

matrix:
  allow_failures:
    - os: windows
  fast_finish: true
  include:

    - os: linux
      compiler: gcc
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      install:
        - pip install --user conan
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CONAN_EXTRAS="-s compiler.libcxx=libstdc++11"

    - os: linux
      compiler: clang
      dist: xenial
      install:
        - sudo update-alternatives
            --install /usr/bin/clang clang /usr/local/clang-7.0.0/bin/clang 70
            --slave /usr/bin/clang++ clang++ /usr/local/clang-7.0.0/bin/clang++
            --slave /usr/bin/ld ld /usr/local/clang-7.0.0/bin/lld
        - export LD_LIBRARY_PATH="/usr/local/clang-7.0.0/lib:$LD_LIBRARY_PATH"
        - sudo update-ccache-symlinks
        - pip install --user conan
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CONAN_EXTRAS="-s compiler.libcxx=libstdc++11"

    - os: osx
      compiler: clang
      osx_image: xcode9.4
      addons:
        homebrew:
          packages:
            - ccache
      install:
        - ccache -M 500M
        - export PATH="/usr/local/opt/ccache/libexec:$PATH"
        - export PATH="/Users/travis/Library/Python/2.7/bin:$PATH"
        - pip install --user conan
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - CMAKE_EXTRAS="-G Xcode"

    - os: windows
      compiler: cl
      install:
        - choco install conan
        - export PATH="/c/Program Files/Conan/conan:$PATH"
        - conan config set general.user_home_short=None
      env:
        - MATRIX_EVAL="CC=cl && CXX=cl"
        - CONAN_EXTRAS="-s compiler='Visual Studio' -s compiler.version=15 -s arch=x86"
        - CMAKE_EXTRAS="-G 'Visual Studio 15 2017' -A Win32"

before_install:
  - printenv | sort | grep -E '^TRAVIS.*$' -v
  - printenv | sort | grep -E '^TRAVIS.*$'
  - eval "$MATRIX_EVAL"

before_script:
  - conan user
  - BUILD_TYPE=Release
  - ccache -z || ":"

script:
  - mkdir build && cd build
  - eval "conan install -b missing -s build_type=$BUILD_TYPE $CONAN_EXTRAS .." &&
    eval "cmake -D CMAKE_BUILD_TYPE=$BUILD_TYPE $CMAKE_EXTRAS -D debug_dynamic_deps=ON .." &&
    cmake -LA | grep '=(.*-NOTFOUND)?$' -Ev &&
    cmake -LA | grep '=(.*-NOTFOUND)?$' -E &&
    cmake --build . --config $BUILD_TYPE &&
    ( cat compile_commands.json || ":" ) &&
    cat activate_run.sh || ":" &&
    cat activate_run.bat || ":" &&
    source activate_run.sh &&
    echo $PATH &&
    ctest -C $BUILD_TYPE -V &&
    source deactivate_run.sh

after_script:
  - ccache -s || ":"
