add_custom_library(${PROJECT_NAME}
  SOURCES
    lockable.hpp
    projname.cpp
    projname.hpp
  DEPENDS
    Threads::Threads
    Boost::system
    Boost::date_time
    Boost::diagnostic_definitions
    Boost::disable_autolinking
    Boost::dynamic_linking
    $<$<TARGET_EXISTS:boost_throw_exception>:boost_throw_exception>
)
if(MSVC)
    target_compile_definitions(${PROJECT_NAME}
      PRIVATE
        _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING
    )
else()
    target_compile_options(${PROJECT_NAME}
      PRIVATE
        -Wno-error=zero-as-null-pointer-constant
    )
endif()

add_custom_executable(${PROJECT_NAME}_tool
  SOURCES
    projname_main.cpp
  DEPENDS
    ${PROJECT_NAME}
    $<$<TARGET_EXISTS:boost_throw_exception>:boost_throw_exception>
)

if(BUILD_TESTING)
    add_custom_test(${PROJECT_NAME}_test
      SOURCES
        lockable_test.cpp
        projname_test.cpp
      DEPENDS
        ${PROJECT_NAME}
        $<$<TARGET_EXISTS:boost_throw_exception>:boost_throw_exception>
        gtest_main
      EXTRA_ARGS
        --gtest_color=yes
    )
    if(MSVC)
        target_compile_definitions(${PROJECT_NAME}
          PRIVATE
            _SILENCE_CXX17_ALLOCATOR_VOID_DEPRECATION_WARNING
        )
    else()
        target_compile_options(${PROJECT_NAME}
          PRIVATE
            -Wno-error=zero-as-null-pointer-constant
        )
    endif()
endif()
